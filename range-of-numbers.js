'use strict';Object.defineProperty(exports,'__esModule',{value:!0});var range=(a,b,c=1)=>{var d=Math.floor;let f=!1;if('number'!=typeof a||'number'!=typeof c)return Error('All inputs must be of type \'number\'');if('number'!=typeof b&&(f=!0),1>c)return Error('Step must be a positive integer');const g=parseInt(a),h=parseInt(b),j=parseInt(c),i=function(a,b){let c=Array(d((b-a)/j)+1);for(let e=a;e<=b;e+=j){const b=d((e-a)/j);c[b]=e}return c};return g<h?i(g,h):g>h?function(a,b){let c=Array(d((a-b)/j)+1);for(let d=a,e=0;d>=b;d-=j)c[e++]=d;return c}(g,h):f?i(0,g):[g]},rangePromise=(a,b,c=1)=>{var d=Math.floor;let e=parseInt(a),f=parseInt(b),g=parseInt(c);const h=function(a,b,c){let e=Array(d((b-a)/c)+1);for(let f=a;f<=b;f+=c){const b=d((f-a)/c);e[b]=f}return e},i=function(a,b,c){let e=Array(d((a-b)/c)+1);for(let d=a,f=0;d>=b;d-=c)e[f++]=d;return e};return new Promise((a,b)=>{try{if(1>g)throw Error('Step must be a positive integer');if(isNaN(e))throw Error('All inputs must be of type \'number\'');else isNaN(f)&&(f=e,e=0);if(e<f)a(h(e,f,g));else if(e>f)a(i(e,f,g));else if(e===f)a([e]);else throw Error('something bad.')}catch(a){b(a)}})};exports.rangePromise=rangePromise,exports.range=range;
